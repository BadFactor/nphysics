{
  "name": "nphysics",
  "tagline": "2 and 3-dimensional rigid body physics engine for Rust.",
  "body": "About nphysics\r\n========\r\n**nphysics** is a 2 and 3-dimensional physics engine for games and animation.\r\n\r\nExamples are available in the [`examples2`](https://github.com/sebcrozet/nphysics/tree/master/examples2) and  [`examples3`](https://github.com/sebcrozet/nphysics/tree/master/examples3) directories. There is also a short\r\n(outdated) demonstration video [there](http://youtu.be/CANjXZ5rocI). Feel free to ask for help and discuss features on the official [users forum](http://users.nphysics.org).  \r\n\r\n## Features\r\n- static and dynamic rigid bodies.\r\n- common convex primitives: cone, box, ball, cylinder.\r\n- concave geometries build from convex primitives (aka. compound geometries).\r\n- stable stacking.\r\n- island based sleeping (objects deactivation).\r\n- ray casting.\r\n- swept sphere based continuous collision detection.\r\n- ball-in-socket joint.\r\n- fixed joint.\r\n\r\nFor more, check out the documentations of the two variants of the library:\r\n* [nphysics2d](doc/nphysics2d), for the 2d physics engine using single-precision numbers.\r\n* [nphysics3d](doc/nphysics3d), for the 3d physics engine using single-precision numbers.\r\n\r\nDouble-precision floating point numbers may be enabled using the `f64` feature.",
  "google": "UA-51756333-2",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}