(function() {var implementors = {};
implementors['ncollide_queries'] = ["impl&lt;'a, P, B, BV&gt; <a class='trait' href='ncollide_entities/partitioning/bvt_cost_fn/trait.BVTCostFn.html' title='ncollide_entities::partitioning::bvt_cost_fn::BVTCostFn'>BVTCostFn</a>&lt;P::Vect::Scalar, B, BV, <a class='struct' href='ncollide_queries/ray/struct.RayIntersection.html' title='ncollide_queries::ray::RayIntersection'>RayIntersection</a>&lt;P::Vect&gt;&gt; for <a class='struct' href='ncollide_queries/ray/struct.RayIntersectionCostFn.html' title='ncollide_queries::ray::RayIntersectionCostFn'>RayIntersectionCostFn</a>&lt;'a, P&gt;",];implementors['ncollide_queries'] = ["impl&lt;'a, P, B, BV&gt; <a class='trait' href='ncollide_entities/partitioning/bvt_cost_fn/trait.BVTCostFn.html' title='ncollide_entities::partitioning::bvt_cost_fn::BVTCostFn'>BVTCostFn</a>&lt;P::Vect::Scalar, B, BV, <a class='struct' href='ncollide_queries/ray/struct.RayIntersection.html' title='ncollide_queries::ray::RayIntersection'>RayIntersection</a>&lt;P::Vect&gt;&gt; for <a class='struct' href='ncollide_queries/ray/struct.RayIntersectionCostFn.html' title='ncollide_queries::ray::RayIntersectionCostFn'>RayIntersectionCostFn</a>&lt;'a, P&gt; <span class='where'>where P: <a class='trait' href='ncollide_math/trait.Point.html' title='ncollide_math::Point'>Point</a>, B: <a class='trait' href='ncollide_queries/ray/trait.RayCast.html' title='ncollide_queries::ray::RayCast'>RayCast</a>&lt;P, <a class='struct' href='nalgebra/structs/mat/struct.Identity.html' title='nalgebra::structs::mat::Identity'>Identity</a>&gt;, BV: <a class='trait' href='ncollide_queries/ray/trait.RayCast.html' title='ncollide_queries::ray::RayCast'>RayCast</a>&lt;P, <a class='struct' href='nalgebra/structs/mat/struct.Identity.html' title='nalgebra::structs::mat::Identity'>Identity</a>&gt;</span>",];

            if (window.register_implementors) {
                window.register_implementors(implementors);
            } else {
                window.pending_implementors = implementors;
            }
        
})()
